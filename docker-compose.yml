services:


  web_scraper_app:

    build: 
      context: .
      dockerfile: ./scraper/Dockerfile

    image : ${PROJECT_PREFIX}-scraper:latest

    container_name: web_scraper_container

    volumes:
      - ./scraper:/app/scraper
      - ./service-account.json:/app/scraper/service-account.json
    
    env_file:
      - ./.env
      - ./scraper/.env

    command: >
      python3 extract_data.py

    networks:
      - app_connections


  dbt_app:

    build: 
      context: .
      dockerfile: ./dbt_part/Dockerfile

    image: ${PROJECT_PREFIX}-dbt:latest

    container_name: dbt_container

    volumes:
      - ./dbt_part:/app/dbt_part
      - ./service-account.json:/app/dbt_part/service-account.json
    
    env_file:
      - ./.env
      - ./dbt_part/.env

    depends_on:
      - web_scraper_app

    command: >
      dbt run

    networks:
      - app_connections


  airflow_app:
  
    build:
      context: .
      dockerfile: ./airflow/Dockerfile

    image: ${PROJECT_PREFIX}-airflow:latest

    container_name: airflow_container

    ports:
      - "8080:8080"

    volumes:
      - ./airflow/dags:/opt/airflow/dags:z
      - ./airflow/logs:/opt/airflow/logs:z
      - ./airflow/plugins:/opt/airflow/plugins:z
      - /var/run/docker.sock:/var/run/docker.sock

    user: "${AIRFLOW_UID:-50000}:0"

    add_group:
      - "${DOCKER_GID}"

    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXEMPLES=False
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow_init.db
      - TZ=UTC

    depends_on:
      - web_scraper_app
      - dbt_app

    command: >
      bash -c "airflow db migrate && airflow standalone"

    networks:
      - app_connections



networks:
  app_connections:
    driver: bridge